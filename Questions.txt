1) Я создаю новую ветку, в нашем калькуляторе. Вопрос: Если я создам новый класс, он отобразится в ветке? Или в ветке, я могу вносить только изменения в класс калькулятор?

Да, если ты создашь новый файл, сделаешь git add, то  git гит начнет отслеживать изменения в нем.

2) Разве не удобнее когда слиянием веток занимается один человек? Или так оно и есть?

Нет, не удобнее. Он бы занимался этим целый день и понадобилась бы отдельная должность- мержильщик. В день на проекте создаются +- 10 мержей
Ты как разработчик ответственен за фичу которую сделал, ее совместимость с кодом в основной ветке и правильное разрешение конфликтов при мерже.
У стороннего челевека уходило бы слишком много времени на разрешение конфликтов и то с большой вероятностью были бы косяки.
Попробуй самостоятельно для еще одной фичи в калькуляторе создать pull request в гитхабе.

3) Верно ли утверждение, что по сути большой разницы между процедурными языками и ОО языками особо нет(кроме методов взаимодействия модулей)? Вся разность в философии и подходе? 
Верно ли, что в процедурном языке, нужно подбирать код под данные, а в ОО языках, данные подбираются под методы?

Я тут вряд ли большой философ) просто хотел, чтобы ты посмотрел как пишутся программы на проц. языках.
В ООП ты можешь обьединить данные (переменные класса) и логику(методы), и фактически создавать свои структуры данных.
В процедурных языках ты оперируешь примитивами и массивами и не можешь обьединить их в одну сущность с даннымиы.

4) Как обновить удаленный репозиторий в папке? git fetch origin, git pull origin, все пробовал, ничего не получается, пришлось clone; 

5) Подскажи пожалуйста, по какому алгоритму ты занимался вначале, что конкретно делал, сколько уделял времени в день и когда вышел на работу? 

6) Приведи пожалуйста несколько примеров задач, которые решаете сейчас на работе, если не трудно и это не тайна.
